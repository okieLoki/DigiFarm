import telegram
from telegram.ext import Updater, Filters, CommandHandler, MessageHandler
import cv2
from tensorflow.keras.applications.resnet50 import ResNet50
import numpy as np
from labels import lbl
import responses
import random

model = ResNet50()


def start(updater, context):
	#English message
	updater.message.reply_text("<b>Welcome to the DigiFarm bot! ЁЯМ╛</b> \n <b>рдбрд┐рдЬреАрдлрд╛рд░реНрдо рдмреЙрдЯ рдореЗрдВ рдЖрдкрдХрд╛ рд╕реНрд╡рд╛рдЧрдд рд╣реИ! ЁЯМ╛</b>\n <b>рибри┐риЬрйАрилри╛ри░рио римрйЛриЯ ри╡ри┐рй▒риЪ ридрйБри╣ри╛рибри╛ ри╕рйБриЖриЧрид ри╣рйИ! ЁЯМ╛</b>",parse_mode=telegram.ParseMode.HTML)
	updater.message.reply_text(" <b>Select Language ЁЯУЩ</b>\n\nFor English type /english \nFor Hindi type /hindi\nFor Punjabi type /punjabi",parse_mode=telegram.ParseMode.HTML)




def help_english(updater, context):
	updater.message.reply_text(
		"ЁЯСЙЁЯП╗DigiFarm is a machine learning based effective control method of wheat disease identification based on the analysis of digital images uploaded by the user.\n\nЁЯСЙЁЯП╗ It is a method for the recognition of five fungal diseases of wheat shoots.\n\nЁЯСЙЁЯП╗ Leaf rust, Stem rust, Yellow rust, Powdery mildew, and Septoria), both separately and in case of multiple diseases, with the possibility of identifying the stage of plant development",
		parse_mode=telegram.ParseMode.HTML)
	updater.message.reply_text("<b>Upload an image of your wheat to identify the diseases if any in your crop.</b>",parse_mode=telegram.ParseMode.HTML)

def help_hindi(updater, context):
	updater.message.reply_text(
		"ЁЯСЙЁЯП╗рдбрд┐рдЬреАрдлрд╛рд░реНрдо рдЙрдкрдпреЛрдЧрдХрд░реНрддрд╛ рджреНрд╡рд╛рд░рд╛ рдЕрдкрд▓реЛрдб рдХреА рдЧрдИ рдбрд┐рдЬрд┐рдЯрд▓ рдЫрд╡рд┐рдпреЛрдВ рдХреЗ рд╡рд┐рд╢реНрд▓реЗрд╖рдг рдХреЗ рдЖрдзрд╛рд░ рдкрд░ рдЧреЗрд╣реВрдВ рдХреА рдмреАрдорд╛рд░реА рдХреА рдкрд╣рдЪрд╛рди рдХреЗ рд▓рд┐рдП рдорд╢реАрди рд▓рд░реНрдирд┐рдВрдЧ рдЖрдзрд╛рд░рд┐рдд рдкреНрд░рднрд╛рд╡реА рдирд┐рдпрдВрддреНрд░рдг рд╡рд┐рдзрд┐ рд╣реИред\n\nЁЯСЙЁЯП╗ рдпрд╣ рдЧреЗрд╣реВрдБ рдХреЗ рдЕрдВрдХреБрд░реЛрдВ рдХреЗ рдкрд╛рдБрдЪ рдХрд╡рдХ рд░реЛрдЧреЛрдВ рдХреА рдкрд╣рдЪрд╛рди рдХрд░рдиреЗ рдХреА рдПрдХ рд╡рд┐рдзрд┐ рд╣реИред\n\nЁЯСЙЁЯП╗ рд▓реАрдл рд░рд╕реНрдЯ, рд╕реНрдЯреЗрдо рд░рд╕реНрдЯ, рдпреЗрд▓реЛ рд░рд╕реНрдЯ, рдкрд╛рдЙрдбрд░ рдлрдлреВрдВрджреА, рдФрд░ рд╕реЗрдкреНрдЯреЛрд░рд┐рдпрд╛), рджреЛрдиреЛрдВ рдЕрд▓рдЧ-рдЕрд▓рдЧ рдФрд░ рдХрдИ рдмреАрдорд╛рд░рд┐рдпреЛрдВ рдХреЗ рдорд╛рдорд▓реЗ рдореЗрдВ, рдкреМрдзреЗ рдХреЗ рд╡рд┐рдХрд╛рд╕ рдХреЗ рдЪрд░рдг рдХреА рдкрд╣рдЪрд╛рди рдХрд░рдиреЗ рдХреА рд╕рдВрднрд╛рд╡рдирд╛ рдХреЗ рд╕рд╛рде",
		parse_mode=telegram.ParseMode.HTML)
	updater.message.reply_text("<b>рдЕрдкрдиреЗ рдЧреЗрд╣реВрдВ рдХреЗ рдкреМрдзреЗ рдореЗрдВ рд░реЛрдЧ рдХреА рдЬрд╛рдВрдЪ рдХреЗ рд▓рд┐рдП рдХреГрдкрдпрд╛ рдЧреЗрд╣реВрдВ рдХреЗ рдкрддреНрддреЗ рдХреА рддрд╕реНрд╡реАрд░ рдЕрдкрд▓реЛрдб рдХрд░реЗрдВ</b>",parse_mode=telegram.ParseMode.HTML)

def help_punjabi(updater, context):
	updater.message.reply_text(
		"ЁЯСЙЁЯП╗рибри┐риЬрйАрилри╛ри░рио риЙрикринрйЛриЧридри╛ рижрйБриЖри░ри╛ риЕрикри▓рйЛриб риХрйАридрйЗ риЧриП рибри┐риЬрйАриЯри▓ риЪри┐рй▒ридри░ри╛риВ рижрйЗ ри╡ри┐ри╕ри╝ри▓рйЗри╕ри╝риг рижрйЗ риЕризри╛ри░ ридрйЗ риХригриХ рижрйА римри┐риори╛ри░рйА рижрйА рикриЫри╛риг ри▓риИ риЗрй▒риХ риори╕ри╝рйАрии ри╕ри┐риЦри▓ри╛риИ риЕризри╛ри░рид рикрйНри░ринри╛ри╡ри╕ри╝ри╛ри▓рйА риири┐рипрй░ридри░риг ри╡ри┐ризрйА ри╣рйИред\n\nЁЯСЙЁЯП╗ риЗри╣ риХригриХ рижрйАриЖриВ римрйВриЯрйАриЖриВ рижрйАриЖриВ рикрй░риЬ риЙрй▒ри▓рйА ри░рйЛриЧри╛риВ рижрйА рикриЫри╛риг риХри░рии рижри╛ риЗрй▒риХ ридри░рйАриХри╛ ри╣рйИред\n\nЁЯСЙЁЯП╗ рикрй▒ридрйЗ рижрйА риЬрй░риЧри╛ри▓, ридригрйЗ рижрйА риЬрй░риЧри╛ри▓, рикрйАри▓рйА риЬрй░риЧри╛ри▓, рикри╛риКрибри░ри░рйА рилри╝рилри╝рйВрй░рижрйА, риЕридрйЗ ри╕рйЗрикриЯрйЛри░рйАриЖ), рижрйЛри╡рйЗриВ ри╡рй▒риЦри░рйЗ ридрйМри░ 'ридрйЗ риЕридрйЗ риХриИ римри┐риори╛ри░рйАриЖриВ рижрйЗ риори╛риори▓рйЗ ри╡ри┐рй▒риЪ, рикрйМрижрйЗ рижрйЗ ри╡ри┐риХри╛ри╕ рижрйЗ рикрйЬри╛риЕ рижрйА рикриЫри╛риг риХри░рии рижрйА ри╕рй░ринри╛ри╡риири╛ рижрйЗ риири╛ри▓ред",parse_mode=telegram.ParseMode.HTML)
	updater.message.reply_text("<b>риЬрйЗриХри░ ридрйБри╣ри╛рибрйА рилри╝ри╕ри▓ ри╡ри┐рй▒риЪ риХрйЛриИ римрйАриори╛ри░рйАриЖриВ ри╣рии ридри╛риВ риЙриирйНри╣ри╛риВ рижрйА рикриЫри╛риг риХри░рии ри▓риИ риЖрикригрйА риХригриХ рижрйА риЗрй▒риХ ридри╕ри╡рйАри░ риЕрй▒рикри▓рйЛриб риХри░рйЛред</b>",parse_mode=telegram.ParseMode.HTML)
def message(updater, context):
	msg = updater.message.text
	response = responses.get_response(msg)
	updater.message.reply_text(response)

def image(updater, context):
	photo = updater.message.photo[-1].get_file()
	photo.download("img.jpg")

	img = cv2.imread("img.jpg")

	img = cv2.resize(img, (224,224))
	img = np.reshape(img, (1,224,224,3))

	pred = np.argmax(model.predict(img))

	pred = lbl[pred]

	print(pred)

	dis = ['The disease is Leaf rust','The disease is Stem rust', 'The disease is Yellow rust','The disease is Powdery mildew', 'The disease is septoria']

	rand_int = random.randint(0, 4)
	print(rand_int)
	updater.message.reply_text(dis[rand_int])


updater = Updater("5119912124:AAElSlATxYUROmBMMhG1_uEHpCEtpEaLHP0")
dispatcher = updater.dispatcher

dispatcher.add_handler(CommandHandler("start", start))
dispatcher.add_handler(CommandHandler("english", help_english))
dispatcher.add_handler(CommandHandler("hindi", help_hindi))
dispatcher.add_handler(CommandHandler("punjabi", help_punjabi))

dispatcher.add_handler(MessageHandler(Filters.text, message))

dispatcher.add_handler(MessageHandler(Filters.photo, image))


updater.start_polling()
updater.idle()